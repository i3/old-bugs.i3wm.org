From cbcd261a0e4641342c819305da24fce2806b8e64 Mon Sep 17 00:00:00 2001
From: Vladimir Chizhov <master@mirlord.com>
Date: Thu, 17 Nov 2011 10:42:52 +0400
Subject: [PATCH 2/2] 16-bit color depth awareness, part 2: for i3bar

Converts color codes, specified in configuration in hex
format, from #FFFFFF (24 bits) to #00FFFF (the same value in 16 bits).

i.e. pure red will be converted from #FF0000 to #00F800

Signed-off-by: Vladimir Chizhov <master@mirlord.com>
---
 include/libi3.h        |    2 ++
 libi3/get_colorpixel.c |    7 +++++++
 src/cfgparse.y         |   36 ++++++++++++++++++++++++++----------
 3 files changed, 35 insertions(+), 10 deletions(-)

diff --git a/include/libi3.h b/include/libi3.h
index 7f26a49..c189e57 100644
--- a/include/libi3.h
+++ b/include/libi3.h
@@ -141,6 +141,8 @@ uint32_t get_colorpixel(const char *hex) __attribute__((const));
 
 uint32_t get_colorpixel_in_depth(const char *hex, const int depth) __attribute__((const));
 
+char* get_color_name_in_depth(char **color_name_p, const char *hex, const int depth);
+
 #if defined(__APPLE__)
 
 /*
diff --git a/libi3/get_colorpixel.c b/libi3/get_colorpixel.c
index 06cdb87..1a8c269 100644
--- a/libi3/get_colorpixel.c
+++ b/libi3/get_colorpixel.c
@@ -44,6 +44,13 @@ uint32_t get_colorpixel_in_depth(const char *hex, const int depth) {
     return (r << 16 | g << 8 | b);
 }
 
+char* get_color_name_in_depth(char **color_name_p, const char *hex, const int depth) {
+    uint32_t pixel = get_colorpixel_in_depth(hex, depth);
+    *color_name_p = malloc(8);
+    sprintf(*color_name_p, "#00%04X", pixel);
+    return *color_name_p;
+}
+
 unsigned short convert888to565(uint8_t r8, uint8_t g8, uint8_t b8) {
     uint8_t r5 = r8 >> 3; // 5-bit red
     uint8_t g6 = g8 >> 2; // 6-bit green
diff --git a/src/cfgparse.y b/src/cfgparse.y
index 78fc1fb..f3095b3 100644
--- a/src/cfgparse.y
+++ b/src/cfgparse.y
@@ -1150,7 +1150,9 @@ bar_color_background:
     TOK_BAR_COLOR_BACKGROUND HEXCOLOR
     {
         DLOG("background = %s\n", $2);
-        current_bar.colors.background = $2;
+        char *color_name;
+        current_bar.colors.background =
+            get_color_name_in_depth(&color_name, $2, XDefaultDepth(xlibdpy, 0));
     }
     ;
 
@@ -1158,7 +1160,9 @@ bar_color_statusline:
     TOK_BAR_COLOR_STATUSLINE HEXCOLOR
     {
         DLOG("statusline = %s\n", $2);
-        current_bar.colors.statusline = $2;
+        char *color_name;
+        current_bar.colors.statusline =
+            get_color_name_in_depth(&color_name, $2, XDefaultDepth(xlibdpy, 0));
     }
     ;
 
@@ -1166,8 +1170,11 @@ bar_color_focused_workspace:
     TOK_BAR_COLOR_FOCUSED_WORKSPACE HEXCOLOR HEXCOLOR
     {
         DLOG("focused_ws = %s and %s\n", $2, $3);
-        current_bar.colors.focused_workspace_text = $2;
-        current_bar.colors.focused_workspace_bg = $3;
+        char *color_name;
+        current_bar.colors.focused_workspace_text =
+            get_color_name_in_depth(&color_name, $2, XDefaultDepth(xlibdpy, 0));
+        current_bar.colors.focused_workspace_bg =
+            get_color_name_in_depth(&color_name, $3, XDefaultDepth(xlibdpy, 0));
     }
     ;
 
@@ -1175,8 +1182,11 @@ bar_color_active_workspace:
     TOK_BAR_COLOR_ACTIVE_WORKSPACE HEXCOLOR HEXCOLOR
     {
         DLOG("active_ws = %s and %s\n", $2, $3);
-        current_bar.colors.active_workspace_text = $2;
-        current_bar.colors.active_workspace_bg = $3;
+        char *color_name;
+        current_bar.colors.active_workspace_text =
+            get_color_name_in_depth(&color_name, $2, XDefaultDepth(xlibdpy, 0));
+        current_bar.colors.active_workspace_bg =
+            get_color_name_in_depth(&color_name, $3, XDefaultDepth(xlibdpy, 0));
     }
     ;
 
@@ -1184,8 +1194,11 @@ bar_color_inactive_workspace:
     TOK_BAR_COLOR_INACTIVE_WORKSPACE HEXCOLOR HEXCOLOR
     {
         DLOG("inactive_ws = %s and %s\n", $2, $3);
-        current_bar.colors.inactive_workspace_text = $2;
-        current_bar.colors.inactive_workspace_bg = $3;
+        char *color_name;
+        current_bar.colors.inactive_workspace_text =
+            get_color_name_in_depth(&color_name, $2, XDefaultDepth(xlibdpy, 0));
+        current_bar.colors.inactive_workspace_bg =
+            get_color_name_in_depth(&color_name, $3, XDefaultDepth(xlibdpy, 0));
     }
     ;
 
@@ -1193,8 +1206,11 @@ bar_color_urgent_workspace:
     TOK_BAR_COLOR_URGENT_WORKSPACE HEXCOLOR HEXCOLOR
     {
         DLOG("urgent_ws = %s and %s\n", $2, $3);
-        current_bar.colors.urgent_workspace_text = $2;
-        current_bar.colors.urgent_workspace_bg = $3;
+        char *color_name;
+        current_bar.colors.urgent_workspace_text =
+            get_color_name_in_depth(&color_name, $2, XDefaultDepth(xlibdpy, 0));
+        current_bar.colors.urgent_workspace_bg =
+            get_color_name_in_depth(&color_name, $3, XDefaultDepth(xlibdpy, 0));
     }
     ;
 
-- 
1.7.7.3

