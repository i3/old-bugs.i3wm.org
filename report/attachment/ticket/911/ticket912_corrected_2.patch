From b7fa50681ba3c4b4acfa65627a9b2e00867c8c38 Mon Sep 17 00:00:00 2001
From: Raphael Michel <webmaster@raphaelmichel.de>
Date: Mon, 31 Dec 2012 18:42:27 +0100
Subject: [PATCH] Colorized output for disk usage

---
 i3status.c            |    5 ++++-
 include/i3status.h    |    2 +-
 man/i3status.man      |   11 +++++++++++
 src/print_disk_info.c |   20 +++++++++++++++++++-
 4 files changed, 35 insertions(+), 3 deletions(-)

diff --git a/i3status.c b/i3status.c
index 87a793b..0556a37 100644
--- a/i3status.c
+++ b/i3status.c
@@ -268,6 +268,9 @@ int main(int argc, char *argv[]) {
 
         cfg_opt_t disk_opts[] = {
                 CFG_STR("format", "%free", CFGF_NONE),
+                CFG_INT("low_threshold", 10 * 1024, CFGF_NONE), // 10 GiB
+                CFG_STR("threshold_type", "mibibytes", CFGF_NONE),
+                CFG_CUSTOM_COLOR_OPTS,
                 CFG_END()
         };
 
@@ -453,7 +456,7 @@ int main(int argc, char *argv[]) {
 
                         CASE_SEC_TITLE("disk") {
                                 SEC_OPEN_MAP("disk_info");
-                                print_disk_info(json_gen, buffer, title, cfg_getstr(sec, "format"));
+                                print_disk_info(json_gen, buffer, title, cfg_getstr(sec, "format"), cfg_getint(sec, "low_threshold"), cfg_getstr(sec, "threshold_type"));
                                 SEC_CLOSE_MAP;
                         }
 
diff --git a/include/i3status.h b/include/i3status.h
index 09394bd..7564f04 100644
--- a/include/i3status.h
+++ b/include/i3status.h
@@ -138,7 +138,7 @@ char *endcolor() __attribute__ ((pure));
 char *auto_detect_format();
 
 void print_ipv6_info(yajl_gen json_gen, char *buffer, const char *format_up, const char *format_down);
-void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format);
+void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format, const int low_threshold, char *threshold_type);
 void print_battery_info(yajl_gen json_gen, char *buffer, int number, const char *path, const char *format, int low_threshold, char *threshold_type, bool last_full_capacity);
 void print_time(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm);
 void print_ddate(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm);
diff --git a/man/i3status.man b/man/i3status.man
index 3f7a924..228c3ff 100644
--- a/man/i3status.man
+++ b/man/i3status.man
@@ -164,12 +164,23 @@ Gets used, free, available and total amount of bytes on the given mounted filesy
 These values can also be expressed in percentages with the percentage_used,
 percentage_free, percentage_avail and percentage_used_of_avail formats.
 
+It is possible to define a low_threshold that causes the disk text to be
+colored red if the free space is unter a certain amount. The low_threshold 
+type can be of threshold_type "mibibytes" or "percentage". So, if you configure 
+low_threshold to 10 and threshold_type to "percentage", and your disk is
+91 percent full, it will be colored red.
+
 *Example order*: +disk /mnt/usbstick+
 
 *Example format*: +%free (%avail)/ %total+
 
 *Example format*: +%percentage_used used, %percentage_free free, %percentage_avail avail+
 
+*Example low_threshold*: +10240+
+
+*Example threshold_type*: +mibibytes+
+
+
 === Run-watch
 
 Expands the given path to a pidfile and checks if the process ID found inside
diff --git a/src/print_disk_info.c b/src/print_disk_info.c
index f49fe66..9eea3c3 100644
--- a/src/print_disk_info.c
+++ b/src/print_disk_info.c
@@ -43,9 +43,10 @@ static int print_bytes_human(char *outwalk, uint64_t bytes) {
  * human readable manner.
  *
  */
-void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format) {
+void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format, const int low_threshold, char *threshold_type) {
         const char *walk;
         char *outwalk = buffer;
+        bool colorful_output = false;
 
         INSTANCE(path);
 
@@ -61,12 +62,26 @@ void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const ch
                 return;
 #endif
 
+        int percentage_free = ((float)buf.f_bfree / (float)buf.f_blocks) * 100;
+        uint64_t megabytes_free = ((uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree)/(1024*1024);
+        if ((strcmp(threshold_type, "percentage") == 0 && 
+                percentage_free < low_threshold) ||
+                ((strcmp(threshold_type, "mibibytes") == 0 ||
+                strcmp(threshold_type, "megabytes")) &&
+                megabytes_free < (uint64_t) low_threshold)) {
+                START_COLOR("color_bad");
+                colorful_output = true;
+        } else {
+                colorful_output = false;
+        }
+
         for (walk = format; *walk != '\0'; walk++) {
                 if (*walk != '%') {
                         *(outwalk++) = *walk;
                         continue;
                 }
 
+
                 if (BEGINS_WITH(walk+1, "free")) {
                         outwalk += print_bytes_human(outwalk, (uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree);
                         walk += strlen("free");
@@ -106,7 +121,10 @@ void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const ch
                         outwalk += sprintf(outwalk, "%.01f%%", 100.0 * (double)buf.f_bavail / (double)buf.f_blocks);
                         walk += strlen("percentage_avail");
                 }
+                
         }
+        if (colorful_output)
+                END_COLOR;
 
         *outwalk = '\0';
         OUTPUT_FULL_TEXT(buffer);
-- 
1.7.10.4

