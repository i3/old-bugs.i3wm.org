From 2fe639cf60473a1ff972f9513716d37841ccb3ae Mon Sep 17 00:00:00 2001
From: Raphael Michel <webmaster@raphaelmichel.de>
Date: Mon, 31 Dec 2012 18:42:27 +0100
Subject: [PATCH 1/2] Colorized output for disk usage

---
 i3status.c            |    5 ++++-
 include/i3status.h    |    2 +-
 man/i3status.man      |   11 ++++++++++-
 src/print_disk_info.c |   20 +++++++++++++++++++-
 4 files changed, 34 insertions(+), 4 deletions(-)

diff --git a/i3status.c b/i3status.c
index 87a793b..8f58f0b 100644
--- a/i3status.c
+++ b/i3status.c
@@ -268,6 +268,9 @@ int main(int argc, char *argv[]) {
 
         cfg_opt_t disk_opts[] = {
                 CFG_STR("format", "%free", CFGF_NONE),
+                CFG_INT("low_threshold", 10737418240, CFGF_NONE), // 10 GB
+                CFG_STR("threshold_type", "bytes", CFGF_NONE),
+                CFG_CUSTOM_COLOR_OPTS,
                 CFG_END()
         };
 
@@ -453,7 +456,7 @@ int main(int argc, char *argv[]) {
 
                         CASE_SEC_TITLE("disk") {
                                 SEC_OPEN_MAP("disk_info");
-                                print_disk_info(json_gen, buffer, title, cfg_getstr(sec, "format"));
+                                print_disk_info(json_gen, buffer, title, cfg_getstr(sec, "format"), cfg_getint(sec, "low_threshold"), cfg_getstr(sec, "threshold_type"));
                                 SEC_CLOSE_MAP;
                         }
 
diff --git a/include/i3status.h b/include/i3status.h
index 09394bd..66111b0 100644
--- a/include/i3status.h
+++ b/include/i3status.h
@@ -138,7 +138,7 @@ char *endcolor() __attribute__ ((pure));
 char *auto_detect_format();
 
 void print_ipv6_info(yajl_gen json_gen, char *buffer, const char *format_up, const char *format_down);
-void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format);
+void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format, int low_threshold, char *threshold_type);
 void print_battery_info(yajl_gen json_gen, char *buffer, int number, const char *path, const char *format, int low_threshold, char *threshold_type, bool last_full_capacity);
 void print_time(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm);
 void print_ddate(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm);
diff --git a/man/i3status.man b/man/i3status.man
index 3f7a924..5b04693 100644
--- a/man/i3status.man
+++ b/man/i3status.man
@@ -164,12 +164,21 @@ Gets used, free, available and total amount of bytes on the given mounted filesy
 These values can also be expressed in percentages with the percentage_used,
 percentage_free, percentage_avail and percentage_used_of_avail formats.
 
-*Example order*: +disk /mnt/usbstick+
+It is possible to define a low_threshold that causes the disk text to be
+colored red if the free space is unter a certain amount. The low_threshold 
+type can be of threshold_type "bytes" or "percentage". So, if you configure 
+low_threshold to 10 and threshold_type to "percentage", and your disk is
+91 percent full, it will be colored red.
 
 *Example format*: +%free (%avail)/ %total+
 
 *Example format*: +%percentage_used used, %percentage_free free, %percentage_avail avail+
 
+*Example low_threshold*: +10737418240+
+
+*Example threshold_type*: +bytes+
+
+
 === Run-watch
 
 Expands the given path to a pidfile and checks if the process ID found inside
diff --git a/src/print_disk_info.c b/src/print_disk_info.c
index f49fe66..835df30 100644
--- a/src/print_disk_info.c
+++ b/src/print_disk_info.c
@@ -43,9 +43,10 @@ static int print_bytes_human(char *outwalk, uint64_t bytes) {
  * human readable manner.
  *
  */
-void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format) {
+void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format, int low_threshold, char *threshold_type) {
         const char *walk;
         char *outwalk = buffer;
+        bool colorful_output;
 
         INSTANCE(path);
 
@@ -67,6 +68,20 @@ void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const ch
                         continue;
                 }
 
+                int percentage_free = ((uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree / ((uint64_t)buf.f_bsize * (uint64_t)buf.f_blocks))*100;
+
+                if (strncmp(threshold_type, "percentage", strlen(threshold_type))
+                        && percentage_free < low_threshold) {
+                        START_COLOR("color_bad");
+                        colorful_output = true;
+                } else if (strncmp(threshold_type, "bytes", strlen(threshold_type))
+                        && ((uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree) < (uint64_t) low_threshold) {
+                        START_COLOR("color_bad");
+                        colorful_output = true;
+                } else {
+                        colorful_output = false;
+                }
+
                 if (BEGINS_WITH(walk+1, "free")) {
                         outwalk += print_bytes_human(outwalk, (uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree);
                         walk += strlen("free");
@@ -106,6 +121,9 @@ void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const ch
                         outwalk += sprintf(outwalk, "%.01f%%", 100.0 * (double)buf.f_bavail / (double)buf.f_blocks);
                         walk += strlen("percentage_avail");
                 }
+                
+                if (colorful_output)
+                        END_COLOR;
         }
 
         *outwalk = '\0';
-- 
1.7.10.4


From 3b612e9250c6f7efcd38a2a341486ce813706117 Mon Sep 17 00:00:00 2001
From: Raphael Michel <webmaster@raphaelmichel.de>
Date: Wed, 2 Jan 2013 18:01:16 +0100
Subject: [PATCH 2/2] Previous patch corrected

---
 i3status.c            |    4 ++--
 include/i3status.h    |    2 +-
 man/i3status.man      |    8 +++++---
 src/print_disk_info.c |   35 ++++++++++++++++++-----------------
 4 files changed, 26 insertions(+), 23 deletions(-)

diff --git a/i3status.c b/i3status.c
index 8f58f0b..6973f34 100644
--- a/i3status.c
+++ b/i3status.c
@@ -268,8 +268,8 @@ int main(int argc, char *argv[]) {
 
         cfg_opt_t disk_opts[] = {
                 CFG_STR("format", "%free", CFGF_NONE),
-                CFG_INT("low_threshold", 10737418240, CFGF_NONE), // 10 GB
-                CFG_STR("threshold_type", "bytes", CFGF_NONE),
+                CFG_INT("low_threshold", 10 * 1024, CFGF_NONE), // 10 GiB
+                CFG_STR("threshold_type", "megabytes", CFGF_NONE),
                 CFG_CUSTOM_COLOR_OPTS,
                 CFG_END()
         };
diff --git a/include/i3status.h b/include/i3status.h
index 66111b0..7564f04 100644
--- a/include/i3status.h
+++ b/include/i3status.h
@@ -138,7 +138,7 @@ char *endcolor() __attribute__ ((pure));
 char *auto_detect_format();
 
 void print_ipv6_info(yajl_gen json_gen, char *buffer, const char *format_up, const char *format_down);
-void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format, int low_threshold, char *threshold_type);
+void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format, const int low_threshold, char *threshold_type);
 void print_battery_info(yajl_gen json_gen, char *buffer, int number, const char *path, const char *format, int low_threshold, char *threshold_type, bool last_full_capacity);
 void print_time(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm);
 void print_ddate(yajl_gen json_gen, char *buffer, const char *format, struct tm *current_tm);
diff --git a/man/i3status.man b/man/i3status.man
index 5b04693..0203fcb 100644
--- a/man/i3status.man
+++ b/man/i3status.man
@@ -166,17 +166,19 @@ percentage_free, percentage_avail and percentage_used_of_avail formats.
 
 It is possible to define a low_threshold that causes the disk text to be
 colored red if the free space is unter a certain amount. The low_threshold 
-type can be of threshold_type "bytes" or "percentage". So, if you configure 
+type can be of threshold_type "megabytes" or "percentage". So, if you configure 
 low_threshold to 10 and threshold_type to "percentage", and your disk is
 91 percent full, it will be colored red.
 
+*Example order*: +disk /mnt/usbstick+
+
 *Example format*: +%free (%avail)/ %total+
 
 *Example format*: +%percentage_used used, %percentage_free free, %percentage_avail avail+
 
-*Example low_threshold*: +10737418240+
+*Example low_threshold*: +10240+
 
-*Example threshold_type*: +bytes+
+*Example threshold_type*: +megabytes+
 
 
 === Run-watch
diff --git a/src/print_disk_info.c b/src/print_disk_info.c
index 835df30..f977e2a 100644
--- a/src/print_disk_info.c
+++ b/src/print_disk_info.c
@@ -43,10 +43,10 @@ static int print_bytes_human(char *outwalk, uint64_t bytes) {
  * human readable manner.
  *
  */
-void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format, int low_threshold, char *threshold_type) {
+void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const char *format, const int low_threshold, char *threshold_type) {
         const char *walk;
         char *outwalk = buffer;
-        bool colorful_output;
+        bool colorful_output = false;
 
         INSTANCE(path);
 
@@ -62,25 +62,26 @@ void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const ch
                 return;
 #endif
 
+        int percentage_free = ((float)buf.f_bfree / (float)buf.f_blocks) * 100;
+        int megabytes_free = ((uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree)/(1024*1024);
+        if (strncmp(threshold_type, "percentage", strlen(threshold_type)) == 0 && 
+                percentage_free < low_threshold) {
+                START_COLOR("color_bad");
+                colorful_output = true;
+        } else if (strncmp(threshold_type, "megabytes", strlen(threshold_type)) == 0 &&
+                megabytes_free < low_threshold) {
+                START_COLOR("color_bad");
+                colorful_output = true;
+        } else {
+                colorful_output = false;
+        }
+
         for (walk = format; *walk != '\0'; walk++) {
                 if (*walk != '%') {
                         *(outwalk++) = *walk;
                         continue;
                 }
 
-                int percentage_free = ((uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree / ((uint64_t)buf.f_bsize * (uint64_t)buf.f_blocks))*100;
-
-                if (strncmp(threshold_type, "percentage", strlen(threshold_type))
-                        && percentage_free < low_threshold) {
-                        START_COLOR("color_bad");
-                        colorful_output = true;
-                } else if (strncmp(threshold_type, "bytes", strlen(threshold_type))
-                        && ((uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree) < (uint64_t) low_threshold) {
-                        START_COLOR("color_bad");
-                        colorful_output = true;
-                } else {
-                        colorful_output = false;
-                }
 
                 if (BEGINS_WITH(walk+1, "free")) {
                         outwalk += print_bytes_human(outwalk, (uint64_t)buf.f_bsize * (uint64_t)buf.f_bfree);
@@ -122,9 +123,9 @@ void print_disk_info(yajl_gen json_gen, char *buffer, const char *path, const ch
                         walk += strlen("percentage_avail");
                 }
                 
-                if (colorful_output)
-                        END_COLOR;
         }
+        if (colorful_output)
+                END_COLOR;
 
         *outwalk = '\0';
         OUTPUT_FULL_TEXT(buffer);
-- 
1.7.10.4

